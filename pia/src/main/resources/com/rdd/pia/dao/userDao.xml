<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.rdd.pia.dao.UserDao" >
    <resultMap id="WholeUserInfo" type="com.rdd.pia.model.PiaUser">
        <id property="idUser" javaType="Integer" jdbcType="INTEGER" column="id_user" />
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="alias" column="alias"/>
        <result property="eMail" column="e_mail"/>
       <!-- <result property="gender"   column="gender"  javaType="com.rdd.pia.model.Gender" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>--> <!--利用typeHandler处理-->
        <result property="gender"   column="gender"/>
        <result property="address" column="address"/>
        <result property="bio" column="bio"/>
        <result property="updateTime" column="update_time"/>
        <!--<result property="updateTime" column="update_time" javaType="java.util.Date" typeHandler="org.apache.ibatis.type.DateTypeHandler"/>-->
    </resultMap>

    <!--仅对 insert 和 update 有用）唯一标记一个属性，MyBatis 会通过 getGeneratedKeys 的返回值或者通过 insert 语句的 selectKey 子元素设置它的键值，默认：unset。
    如果希望得到多个生成的列，也可以是逗号分隔的属性名称列表。-->
    <insert id="createUser"  useGeneratedKeys="true" keyProperty="user.updateTime,user.idUser" keyColumn="update_time,id_user"  parameterType="com.rdd.pia.model.PiaUser">

        INSERT INTO user
        (`user_name`,
         `alias`,
         `password`,
         `e_mail`,
         `gender`,
         `address`,
         `bio`)
        VALUES
        (#{user.userName},#{user.alias},#{user.password},#{user.eMail},#{user.gender},#{user.address},#{user.bio}
        );

    </insert>
    <insert id="archiveUserById">
        INSERT INTO user_archive
        (id_user,user_name,
         alias,
         password,
         e_mail,
         gender,
         address,
         bio,
         archive_reason)
        select `id_user`,`user_name`,
               `alias`,
               `password`,
               `e_mail`,
               `gender`,
               `address`,
               `bio`,
               #{archiveReason}
        from user
        where  id_user = #{id};

    </insert>
    <update id="updateUser" keyProperty="user.updateTime" keyColumn="update_time" useGeneratedKeys="true" parameterType="com.rdd.pia.model.PiaUser">
        UPDATE user
        SET password = #{password},
            alias = #{user.alias},
            e_mail = #{user.eMail},
            gender = #{user.gender},
            address = #{user.address},
            bio = #{user.bio}
        WHERE `id_user` = #{user.idUser}
    </update>
    <delete id="deleteUserById" parameterType="int">
        delete from user where  id_user = #{id}
    </delete>

    <!--

        this.userName = userName;
        this.password = password;
        this.idUser = idUser;
        this.alias = alias;
        this.eMail = eMail;
        this.gender = gender;
        this.address = address;
        this.bio = bio;
        this.updateTime = updateTime;
    -->

    <select id="getUserById" resultMap="WholeUserInfo">
        select  id_user , user_name , password, alias, e_mail, gender, address, bio, update_time
        from user where id_user = #{id}
    </select>
    <select id="getUserByName" resultMap="WholeUserInfo">
        select  id_user , user_name , password, alias, e_mail, gender, address, bio,  update_time
        from user where user_name = #{name}
    </select>
</mapper>